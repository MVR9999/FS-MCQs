1)

Which of the following true about FILE *fp
(A) FILE is a keyword in C for representing files and fp is a variable of FILE type.
(B) FILE is a structure and fp is a pointer to the structure of FILE type
(C) FILE is a stream
(D) FILE is a buffered stream


























Answer: (B)

Explanation: fp is a pointer of FILE type and FILE is a structure that store
following information about opened file. 


2)
Predict the output of the following C Program

char p[20];  
char *s = "string";  
int length = strlen(s);  
int i;  
for (i = 0; i < length; i++)  
    p[i] = s[length -  i];  
printf("%s", p); 

The output of the program is? 
(A) gnirts
(B) gnirt
(C) string
(D) no output is printed





Answer: (D)

Explanation: Let us consider below line inside the for loop
p[i] = s[length — i];
For i = 0, p[i] will be s[6 — 0] and s[6] is '\0'
So p[0] becomes '\0'. It doesn’t matter what comes in p[1], p[2]….. as P[0] will not change for i >0. 
Nothing is printed if we print a string with first character '\0'




3)

#include <stdio.h>  
int main()  
{  
  int a = 10, b = 20, c = 30;  
  if (c > b > a)  
    printf("TRUE");  
  else
    printf("FALSE");  
  return 0;  
} 

(A) TRUE
(B) FALSE
(C) Compiler Error
(D) Output is compiler dependent





Answer: (B)

Explanation:
Let us consider the condition inside the if statement. 
Since there are two greater than (>) operators in expression "c > b > a", associativity of > is considered. 
Associativity of > is left to right. 
So, expression c > b > a is evaluated as ( (c > b) > a ) which is false.




4)

#include<stdio.h> 
void crazy(int n,int a,int b) 
{ 
    if (n <= 0)  return; 
    crazy(n-1, a, b+n); 
    printf("%d %d %d\n",n,a,b); 
    crazy(n-1, b, a+n); 
} 
  
int main() 
{ 
    crazy(3,4,5); 
    return 0; 
} 

(A)
1 4 10
2 4 8
1 8 6
3 4 5
1 5 9
2 5 7
1 7 7

(B)
3 4 5
1 4 10
2 4 8
1 8 6
1 5 9
2 5 7
1 7 7

(C)
1 4 10
2 4 8
1 8 6
3 4 5

(D)
3 4 5
1 5 9
2 5 7
1 7 7


Answer: (A)




5)The following numbers are inserted into an empty binary search tree in the
given order: 10, 1, 3, 5, 15, 12, 16. 

What is the height of the binary search tree (the height is the maximum distance of a leaf node from the root)? 

(A) 2
(B) 3
(C) 4
(D) 6



Answer: (B)

Explanation: Constructed binary search tree will be..

                    10
                  /     \
                 1       15
                 \      /  \
                  3    12   16
                    \
                     5




6)
A binary search tree is generated by inserting in order the following integers:

50, 15, 62, 5, 20, 58, 91, 3, 8, 37, 60, 24

The number of nodes in the left sub-tree and right sub-tree of the root, respectively, is

a) (4, 7)
b) (7, 4)
c) (8, 3)
d) (3, 8)











ANSWER: B 




7)
#include <iostream> 
#include<string> 
using namespace std; 
  
class Base 
{ 
public: 
    virtual string print() const
    { 
        return "This is Base class"; 
    } 
}; 
  
class Derived : public Base 
{ 
public: 
    virtual string print() const
    { 
        return "This is Derived class"; 
    } 
}; 
  
void describe(Base p) 
{ 
    cout << p.print() << endl; 
} 
  
int main() 
{ 
    Base b; 
    Derived d; 
    describe(b); 
    describe(d); 
    return 0; 
} 

(A)
This is Derived class
This is Base class

(B)
This is Base class
This is Derived class

(C)
This is Base class
This is Base class

(D) Compiler Error


Answer: (C)

Explanation:
Note that an object of Derived is passed in describe(d), but print of Base is
called. 
The describe function accepts a parameter of Base type.

This is a typical example of object slicing, when we assign an object of derived
class to an object of base type, the derived class object is sliced off and all the data members inherited from base class are copied.

Object slicing should be ovoided as there may be surprising results like above. 

As a side note, object slicing is not possible in Java. 
In Java, every non-primitive variable is actually a reference.




8)


#include<iostream> 
using namespace std; 
  
int &fun() 
{ 
    int x = 10; 
    return x; 
} 
int main() 
{ 
    fun() = 30; 
    cout << fun(); 
    return 0; 
} 

(A) May cause runtime error/segmentation fault
(B) May cause compiler error
(C) Always works fine.
(D) 0





Answer: (A)

Explanation:

Since we return reference to a local variable, the memory location becomes invalid after function call is over. 
Hence it may result in segmentation fault runtime error.



9)

A member function can always access the data in __________ , (in C++).

(A) the class of which it is member
(B) the object of which it is a member
(C) the public part of its class
(D) the private part of its class








Answer: (A)

Explanation: 
A member function can access it’s class member variables, irrespective of the access specifier in which the member variable is declared.
So, a member function can always access the data in the class of which it is a member.

So, option (A) is correct.




10)

#include<iostream> 
using namespace std;  
class AreaFinder
{
    float l, b, h; 
    float result; 
    public:
    AreaFinder(float hh = 0, float ll = 0, float bb = 0) 
    {
        l = ll; 
        b = bb; 
        h = hh;
    }
    void Display(int ll)
    {
        if(l = 0)
            result = 3.14f * h * h; 
        else
            result = l * b; 
        cout<< result; 
    }
};
int main()
{
    AreaFinder objAF(10, 10, 20);
    objAF.Display(0); 
    return 0; 
}

A.0
B.314
C.314.0000
D.200.0000 	





Ans- A



11)

3. class Beta { }
4. class Alpha {
5. static Beta b1;
6. Beta b2;
7. }
8. public class Tester {
9. public static void main(String[] args) {
10. Beta b1 = new Beta(); Beta b2 = new Beta();
11. Alpha a1 = new Alpha(); Alpha a2 = new Alpha();
12. a1.b1 = b1;
13. a1.b2 = b1;
14. a2.b2 = b2;
15. a1 = null; b1 = null; b2 = null;

16. // do stuff
17. }
18. }

When line 16 is reached, how many objects will be eligible for garbage collection?
A. 0
B. 1
C. 2
D. 3
E. 4
F. 5





Answer:

B is correct. 

It should be clear that there is still a reference to the object referred to by a2, 
and that there is still a reference to the object referred to by a2.b2. 
What might be less clear is that you can still access the other Beta object through the static variable a2.b1—because it's static.




12)

Given:
3. class Box {
4. int size;
5. Box(int s) { size = s; }
6. }
7. public class Laser {
8. public static void main(String[] args) {
9. Box b1 = new Box(5);
10. Box[] ba = go(b1, new Box(6));
11. ba[0] = b1;
12. for(Box b : ba) System.out.print(b.size + " ");
13. }
14. static Box[] go(Box b1, Box b2) {
15. b1.size = 4;
16. Box[] ma = {b2, b1};
17. return ma;
18. }
19. }

What is the result?

A. 4 4
B. 5 4
C. 6 4
D. 4 5
E. 5 5
F. Compilation fails




Answer:
A is correct. 
Although main()'s b1 is a different reference variable than go()'s b1, they refer to the same Box object.





13)

Given:
3. public class Dark {
4. int x = 3;
5. public static void main(String[] args) {
6. new Dark().go1();
7. }
8. void go1() {
9. int x;
10. go2(++x);
11. }
12. void go2(int y) {
13. int x = ++y;
14. System.out.println(x);
15. }
16. }

What is the result?
A. 2
B. 3
C. 4
D. 5
E. Compilation fails
F. An exception is thrown at runtime






Answer:
E is correct. 
In go1() the local variable x is not initialized.





14)

Given:
class Hexy {
public static void main(String[] args) {
Integer i = 42;
String s = (i<40)?"life":(i>50)?"universe":"everything";
System.out.println(s);
}
}

What is the result?
A. null
B. life
C. universe
D. everything
E. Compilation fails
F. An exception is thrown at runtime





Answer:
D is correct. 
This is a ternary nested in a ternary with a little unboxing thrown in. 
Both of the ternary expressions are false.


15)

In Unix operating system, when a process creates a new process using the fork () system call, 
which of the following state is shared between the parent process and child process?

(A) Heap
(B) Stack
(C) Shared memory segments
(D) Both Heap and Stack













Answer: (C)

Explanation: 
In Unix operating system, when a process creates a new process using the fork () system call, 
then memory segments are shared between parent process and child process
but stack and heap area are not shared between parent process and child process.

So, option (C) is correct.



16)A process executes the code

fork();
fork();
fork(); 

The total number of child processes created is
(A) 3
(B) 4
(C) 7
(D) 8








Answer: (C)

Explanation: Let us put some label names for the three lines

  fork ();    // Line 1
  fork ();   // Line 2
  fork ();   // Line 3

       L1       // There will be 1 child process created by line 1
    /     \
  L2      L2    // There will be 2 child processes created by line 2
 /  \    /  \
L3  L3  L3  L3  // There will be 4 child processes created by line 3

We can also use direct formula to get the number of child processes. 
With n fork statements, there are always 2^n – 1 child processes. 




17)
The statement that is executed automatically by the system as a side effect of the modification of the database is
(A) backup
(B) assertion
(C) recovery
(D) trigger











Answer: (D)



18) 	Which of the following best describes composition?
		
A)	A package of model elements.
B)	A set of realizations for a single use case.
C)	A relationship between a whole and its parts.
D)	None of these








Ans- C



19)Which of the following best describes how composition differs from aggregation?
		
A)	A part cannot be removed from a composition, whereas a part can be removed from an aggregation.
B)	A part can belong to only one composition, whereas a part can belong to more than one aggregation.
C)	A part that belongs to a composition cannot have associations with any other classes, whereas a part that belongs to an aggregation can have associations with other classes.
D)	None of these








Ans- B


20) What is the role of encapsulation in reuse?

A)	Encapsulation means that it is not necessary for other developers to know how a software component works internally.
B)	Encapsulation means that software components can work more efficiently.
C)	Encapsulation means that there is no need for software developers to document their work.
D)	None of these














Ans- A

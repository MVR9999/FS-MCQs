Program-1

Steve has a string of lowercase characters .
He wants to reduce the string to its shortest length by doing a series of operations. 
In each operation he selects a pair of adjacent lowercase letters that match, and he deletes them. 
 For instance, the string aab could be shortened to b in one operation.

Steve's task is to delete as many characters as possible using this method 
and print the resulting string. 

If the final string is empty, print -1

input =aaabccddd
output=abd

Explanation
Steve performs the following sequence of operations to get the final string:

aaabccddd -> abccddd -> abddd -> abd

ex:2

input=baab
output =-1

Explanation
baab 
-1(Empty String)


//backend testcases
case = 1
input =aaabccddd
output =abd
case = 2
input=baab
output =-1
case =3
input =abcddcbae
output =e
case = 4
input =abcdabcd
output =abcdabcd


program-2


Alice wrote a sequence of words in CamelCase as a string of letters, s, having 
the following properties:
It is a concatenation of one or more words consisting of English letters.
All letters in the first word are lowercase.
For each of the subsequent words, the first letter is uppercase and rest of the
letters are lowercase.

Given s, print the number of words in s on a new line.

For example, s=OneTwoThree . There are 3 words in the string.
It must return the integer number of words in the input string.

input =saveChangesInTheEditor
output =5

Explanation
String  contains five words:

save
Changes
In
The
Editor

//backend testcases:
case = 1
input =OneTwoThree
output =3
case = 2
input =saveChangesInTheEditor
output =5
case = 3
input =KeshavMemorialInstituteOfTechnology
output =5
case = 4
input =keshavMemorialInstituteOfTechnology
output =5
case = 5
input =NGIT
output =4


Program-3


One day Christy has to distribute some chocolates to her colleagues. 
She is biased towards her friends and plans to give them 
more than the others. One of the program managers hears of this 
and tells her to make sure everyone gets the same number.

To make things difficult, she must equalize the number of chocolates in a series
of operations. 

For each operation, she can give 1,2,or 5 chocolates to all but one colleague. 
Everyone who gets chocolate in a round receives the same number of pieces.

For example, assume the starting distribution is [1,1,5]. 
She can give 2 bars to the first two and the distribution will be [3,3,5]. 
On the next round, she gives the same two 2 bars each, 
and everyone has the same number: [5,5,5].

Given a starting distribution, calculate the minimum number of operations needed
so that every colleague has the same number of chocolates.

The first line contains an integer , the number of colleagues.
The second line contains  space-separated integers denoting the number of chocolates each colleague has.
output :
   Print the minimum number of operations needed.

Sample Input
4
2 2 3 7
Sample Output
2

Explanation
Start with [2,2,3,7]
Add 1 to all but not for the 3rd element -> [3,3,3,8]
Add 5 to all but not for the 4th element -> [8,8,8,8]
Two operations were required.

Sample Input:
3
10 7 12
Sample Output:
3
Explanation:
Start with [10,7,12]
Add 5 to the first two elements -> [15,12,12]
Add 2 to the last two elements -> [15,14,14]
Add 1 to the last two elements -> [15,15,15]
Three operations were required.



//backend testcases

case =1
input =3
10 7 12
output =3

case =2
input =4
2 2 3 7
output =2

case =3
input =8
15 27 8 9 10 6 13 11
output =16

case =4
input =12
18 19 24 21 6 13 11 20 13 15 16 20
output =33

case =5
input =5
27 18 19 24 21
output =8

case =6
input =10
15 27 8 9 10 2 7 6 13 11
output =25











